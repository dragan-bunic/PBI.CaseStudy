@model PBI.CaseStudy.Models.SecurityView
@using System.Globalization
<div class="row d-flex justify-content-center">
    <span>
        <strong>Max </strong> Return On Investment(ROI) would be on date @Model.SecurityStatistic.MaxClose.Date.ToString("MM/dd/yyyy"), for @Model.SecurityStatistic.ROIMaxClose.NumberOfShares.ToString("N0", new CultureInfo("en-US")) shares invested on @Model.SecurityStatistic.ROIMaxClose.InvestedDate.ToString("MM/dd/yyyy") it amounts to <strong> @string.Format("{0}%", Model.SecurityStatistic.ROIMaxClose.Value.ToString("N2"))</strong>
    </span>
</div>
<div class="row d-flex justify-content-center">
    <span>
        <strong>Min </strong> Return On Investment(ROI) would be on date @Model.SecurityStatistic.MinClose.Date.ToString("MM/dd/yyyy"), for @Model.SecurityStatistic.ROIMinClose.NumberOfShares.ToString("N0", new CultureInfo("en-US")) shares invested on @Model.SecurityStatistic.ROIMinClose.InvestedDate.ToString("MM/dd/yyyy") it amounts to <strong>@string.Format("{0}%", Model.SecurityStatistic.ROIMinClose.Value.ToString("N2"))</strong>
    </span>
</div>
<div class="row d-flex justify-content-center">
    <span>
        <strong>Spike </strong> Return On Investment(ROI) would be on date @Model.SecurityStatistic.MaxSpike.Date.ToString("MM/dd/yyyy"), for @Model.SecurityStatistic.ROISpikeClose.NumberOfShares.ToString("N0", new CultureInfo("en-US")) shares invested on @Model.SecurityStatistic.ROISpikeClose.InvestedDate.ToString("MM/dd/yyyy") it amounts to <strong> @string.Format("{0}%", Model.SecurityStatistic.ROISpikeClose.Value.ToString("N2"))</strong>
    </span>
</div>



@(Html.DevExtreme().Chart()
        .ID($"chart_{Model.Id}")
        .Title(string.Format("{0}({1})", Model.SecurityName, Model.Id))

        .Legend(l => l.Visible(false))
        .Crosshair(c => c.Enabled(true))
        .CommonSeriesSettings(s => s
            .ArgumentField("Date")
        )
        .Size(size => size
            .Height(650)
        )
        .Panes(p =>
        {
            p.Add().Name("TopPane").Height("75%");
            p.Add().Name("BottomPane").Height("25%");
        })
        .Series(s => s
            .Add()
            .Pane("TopPane")
            .Type(SeriesType.Candlestick)
            .Name(Model.Id)
            .OpenValueField("Open")
            .HighValueField("High")
            .LowValueField("Low")
            .CloseValueField("Close")
            .ValueField("Volume")
            .Reduction(r => r.Color("red"))
            .ShowInLegend(true)
        )
        .Series(s => s
            .Add()
            .Type(SeriesType.Bar)
            .ValueField("Volume")
            .Name(Model.Id)

            .ShowInLegend(true)
        )
        .ValueAxis(a =>
        {
            a.Add()
                .Pane("BottomPane")
                .Grid(g => g.Visible(true))
                .Title(t => t.Text("Volume"));
            a.Add()
                .Pane("TopPane")
                .TickInterval(1)
                .Title(t => t.Text("US dollars"))
                .Label(l => l.Format(f => f
                .Type(Format.Currency).Precision(0.00)));
        })
        .ArgumentAxis(a => a
            .WorkdaysOnly(true)
            .Label(l => l.Format(Format.ShortDate))
        )
        .Export(e => e.Enabled(true))
        .Tooltip(t => t
            .Enabled(true)
            .Location(ChartTooltipLocation.Edge)
            .CustomizeTooltip(@<text>
                function (arg) {
                    var content = new Array();
                    var changePrefix = Number(arg.point.data.Change) > 0 ? '+' : '';
                    var changeColor = Number(arg.point.data.Change) > 0 ? 'green' : (Number(arg.point.data.Change) == 0 ? 'black' : 'red');
                    content.push('<table style="width:100%">'+
                    '<tr><td>Date:</td><td align="right">' + arg.point.data.Date.toLocaleDateString() + '</td></tr>'+
                    '<tr><td>Open:</td><td align="right">' + arg.point.data.Open.toFixed(2) + '$</td></tr>'+
                    '<tr><td>Close:</td><td align="right">' + arg.closeValue.toFixed(2) + '$</td></tr>'+
                    '<tr><td>High:</td><td align="right">' + arg.highValue.toFixed(2) + '$</td></tr>'+
                    '<tr><td>Low:</td><td align="right">' + arg.lowValue.toFixed(2) + '$</td></tr>'+
                    '<tr><td>Change:</td><td align="right" style="color:' + changeColor + '">'+ changePrefix + arg.point.data.Change.toFixed(2) + '</td></tr>'+
                    '<tr><td>% Change:</td><td align="right" style="color:' + changeColor + '">' + arg.point.data.PercentChange.toFixed(2) + '%</td></tr>'+
                    '<tr style="border-bottom: 1px solid white"><td colspan="100%"></td></tr>'+
                    '<tr style="border-bottom: 1px solid white"><td colspan="100%"></td></tr>'+
                    '<tr style="border-bottom: 1px solid black"><td colspan="100%"></td></tr>'+
                    '<tr style="border-bottom: 1px solid white"><td colspan="100%"></td></tr>'+
                    '<tr style="border-bottom: 1px solid white"><td colspan="100%"></td></tr>'+
                    '<tr><td>Volume:</td><td align="right">' + arg.point.data.Volume.toLocaleString() + '</td></tr></table>');
                    return {
                        html: content.join('')
                    };
                }
            </text>)

        )
          .CommonAnnotationSettings(s => s
            .Series(Model.Id)
            .Type(AnnotationType.Text)
            .Font(f => f
                .Size(14)
                .Weight(550)
            )
            .CustomizeTooltip(@<text>
                function (e) {
                    return {
                        html: e.description
                    };
                }
            </text>)
        )
        .Annotations(a =>
        {
            a.Add()
            .Opacity(0.75)
            .Font(f => { f.Color("#25BF96"); })
            .Argument(Model.SecurityStatistic.MaxClose.Date)
            .Type(AnnotationType.Text)
            .Description($"Maximum closing price for this scurity is {Model.SecurityStatistic.MaxClose.Value.ToString("N2")}$ on a day {Model.SecurityStatistic.MaxClose.Date.ToString("MM/dd/yyyy")}")
            .Text("Max");

            a.Add()
            .Opacity(0.75)
            .Font(f => { f.Color("#CB1919"); })
            .Argument(Model.SecurityStatistic.MinClose.Date)
            .Type(AnnotationType.Text)
            .Description($"Minimum closing price for this scurity is  {Model.SecurityStatistic.MinClose.Value.ToString("N2")}$ on a day {Model.SecurityStatistic.MinClose.Date.ToString("MM/dd/yyyy")}")
            .Text("Min");
            if (Model.SecurityStatistic.MaxSpike != null)
            {
                a.Add()
                .Opacity(0.75)
                .Font(f => { f.Color("#A71E90"); })
                .Argument(Model.SecurityStatistic.MaxSpike.Date)
                .Type(AnnotationType.Text)
                .Description($"Most significant positive spike in the price was {@Model.SecurityStatistic.MaxSpike.Value.ToString("N2")} on a day {Model.SecurityStatistic.MaxSpike.Date.ToString("MM/dd/yyyy")}")
                .Text("Spike");
            }
        })

        .DataSource(Model.HistoricData)
    )

<div class="container  mt-2">
    <div class="row">
        <div class="col border-right">
            <span style="color: #25BF96; text-align: center; font-size: 130%; display: block;">@string.Format("{0}$", Model.SecurityStatistic.MaxClose.Value.ToString("N2"))</span>
            <div class="d-flex justify-content-between"><span style=" font: bold; color: #25BF96;">MAX</span><span style=" text-align: right; font-size: 100%; color: gray;">@Model.SecurityStatistic.MaxClose.Date.ToString("MM/dd/yyyy")</span></div>
        </div>
        <div class="col border-right">
            <span style="color: #A71E90; text-align: center; font-size: 130%; display: block;">@string.Format("{0}", Model.SecurityStatistic.MaxSpike.Value.ToString("N2"))</span>
            <div class="d-flex justify-content-between"><span style=" font: bold; color: #A71E90;">SPIKE</span><span style=" text-align: right; font-size: 100%; color: gray;">@Model.SecurityStatistic.MaxSpike.Date.ToString("MM/dd/yyyy")</span></div>
        </div>
        <div class="col">
            <span style="color: #CB1919; text-align: center; font-size: 130%; display: block;">@string.Format("{0}$", Model.SecurityStatistic.MinClose.Value.ToString("N2"))</span>
            <div class="d-flex justify-content-between"><span style=" font: bold; color: #CB1919;">MIN</span><span style=" text-align: right; font-size: 100%; color: gray;">@Model.SecurityStatistic.MinClose.Date.ToString("MM/dd/yyyy")</span></div>
        </div>
    </div>
</div>